(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{447:function(a,t,s){"use strict";s.r(t);var e=s(2),i=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"pika-简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pika-简介"}},[a._v("#")]),a._v(" Pika 简介")]),a._v(" "),t("p",[a._v("Pika 是一款高性能的 Key-Value 数据库，对采用 Redis 协议展开通信的软件保持着良好的兼容性，绝大多数依托 Redis 展开工作的服务，可以在不修订代码的情况下，就平滑迁移到 Pika 上面来。")]),a._v(" "),t("p",[a._v("除了协议上的兼容外，Pika 在功能上也如 Redis 一样，可以展开主从备份，在这基础上支持了大容量的数据存储，有效地解决原 Redis 的容量瓶颈问题。")]),a._v(" "),t("h2",{attrs:{id:"与-redis-的比较"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#与-redis-的比较"}},[a._v("#")]),a._v(" 与 Redis 的比较")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("Pika 数据存储容量更大")]),t("br"),a._v("\nPika 没有 Redis 的内存限制，它的最大使用空间与磁盘空间大小相同。")]),a._v(" "),t("li",[t("strong",[a._v("Pika 加载与备份的速度更快")]),t("br"),a._v("\nPika 的写入机制与重启机制更加精简，同时备份速度在测试情况中同 Linux 复制文件的指令基本相同，这就使得数据库在遇到问题重启，以及主从模式的同步时，所需时间更少，可靠性更高。")]),a._v(" "),t("li",[t("strong",[a._v("Redis 存放数据的性能更强")]),a._v("\nPika 相较于可以全内存读写的 Redis 而言，增加了使用文件存放数据的环节，因此在存放性能上会低于 Redis。"),t("br"),a._v("\n使用 SSD 磁盘，在硬件上改善性能可以缓解这一性能差距。")])]),a._v(" "),t("h2",{attrs:{id:"适用场景"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#适用场景"}},[a._v("#")]),a._v(" 适用场景")]),a._v(" "),t("ul",[t("li",[t("strong",[a._v("Pika 适合于大数据量或者要求高可用的场景")]),t("br"),a._v("\n在大数据量场景（以50GB为分界线），以及要求高可用（不允许断电丢失）的场景，应当选择 Pika 而不是 Redis。")]),a._v(" "),t("li",[t("strong",[a._v("Redis 在小数据量场景表现更佳")]),t("br"),a._v("\n在实际应用中，Pika 的性能约为 Redis 的 50%，所以在小数据量场景下，使用 Redis 是更好的选择。")])]),a._v(" "),t("h2",{attrs:{id:"实例-与-redis-的性能对比实验"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例-与-redis-的性能对比实验"}},[a._v("#")]),a._v(" 实例：与 Redis 的性能对比实验")]),a._v(" "),t("h3",{attrs:{id:"配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[a._v("#")]),a._v(" 配置")]),a._v(" "),t("ul",[t("li",[a._v("CPU: 24 Cores, Intel® Xeon® CPU E5-2630 v2 @ 2.60GHz")]),a._v(" "),t("li",[a._v("MEM: 165157944 kB")]),a._v(" "),t("li",[a._v("OS: CentOS release 6.2 (Final)")]),a._v(" "),t("li",[a._v("NETWORK CARD: Intel Corporation I350 Gigabit Network Connection")])]),a._v(" "),t("h3",{attrs:{id:"测试过程"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试过程"}},[a._v("#")]),a._v(" 测试过程")]),a._v(" "),t("p",[a._v("在 Pika 中先写入 150G 大小的数据，写入 Hash key 50 个，field 1 千万级别。"),t("br"),a._v("\nRedis 写入 5G 大小的数据。")]),a._v(" "),t("p",[a._v("Pika：18 个线程"),t("br"),a._v("\nRedis：单线程")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://camo.githubusercontent.com/29012b564d31839e38ec694350d334940c085bc17f32a1934cc08cd398ada455/687474703a2f2f7777342e73696e61696d672e636e2f6c617267652f633263643433303767773166366f757763617a617a6a323066753063766161732e6a7067",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"pika-vs-ssdb-detail"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pika-vs-ssdb-detail"}},[a._v("#")]),a._v(" Pika vs SSDB ("),t("a",{attrs:{href:"https://github.com/Qihoo360/pika/wiki/pika-vs-ssdb",target:"_blank",rel:"noopener noreferrer"}},[a._v("Detail"),t("OutboundLink")],1),a._v(")")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://camo.githubusercontent.com/96ced41fb766c5bff0bdcc905b8a33bd7ed173e497bc0a8de0456bde6704ccef/687474703a2f2f696d6775722e636f6d2f72474d5a6d70442e706e67",alt:""}}),a._v(" "),t("img",{attrs:{src:"https://camo.githubusercontent.com/89334870bbb553f9dcaa59ff7b05e231cbac32d602a94b9103f630997adcb5b0/687474703a2f2f696d6775722e636f6d2f676e774d446f662e706e67",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"pika-vs-redis"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pika-vs-redis"}},[a._v("#")]),a._v(" Pika vs Redis")]),a._v(" "),t("p",[t("img",{attrs:{src:"https://camo.githubusercontent.com/d02d78e0804b9d3069343141117395ab950cf9bf90905ec6d2ca6bc7d290da1c/687474703a2f2f696d6775722e636f6d2f6b39395679464e2e706e67",alt:""}})]),a._v(" "),t("h3",{attrs:{id:"结论"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#结论"}},[a._v("#")]),a._v(" 结论")]),a._v(" "),t("p",[a._v("在单线程下面，Pika 性能不如 Redis，但是因为 Pika 本身是多线程架构，所以采行多线程的情况下，Pika 可以在一定的场景拥有更好的性能表现。")]),a._v(" "),t("h2",{attrs:{id:"如何从-redis-迁移到-pika"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#如何从-redis-迁移到-pika"}},[a._v("#")]),a._v(" 如何从 Redis 迁移到 Pika")]),a._v(" "),t("h3",{attrs:{id:"开发需要做的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开发需要做的"}},[a._v("#")]),a._v(" 开发需要做的")]),a._v(" "),t("p",[a._v("得益于 Pika 同 Redis 的兼容性，开发者不需要改动代码。")]),a._v(" "),t("h3",{attrs:{id:"dba-需要做的"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dba-需要做的"}},[a._v("#")]),a._v(" DBA 需要做的")]),a._v(" "),t("ol",[t("li",[a._v("将 Redis 的数据迁移到 Pika 上")]),a._v(" "),t("li",[a._v("展开实时同步工作，确保 Redis 与 Pika 的数据保持一致")]),a._v(" "),t("li",[a._v("切换 LVS 后端 ip，使得 Pike 的服务支撑可以代替 Redis，由此完成迁移")])])])}),[],!1,null,null,null);t.default=i.exports}}]);